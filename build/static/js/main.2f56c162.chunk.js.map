{"version":3,"sources":["Component/Message/index.jsx","Component/User/index.jsx","Component/Sidebar/index.jsx","Pages/Home/index.jsx","Pages/Message-page/index.jsx","Pages/Users/index.jsx","Pages/UserPage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Message","props","useState","date","formDate","setFormDate","useEffect","formatedDate","Date","toLocaleDateString","className","Card","to","userId","_id","CardHeader","title","name","subheader","CardContent","Typography","variant","color","text","User","email","Sidebar","MainPage","messages","setMessages","letSort","setLetSort","isSortByDateUp","setIsSortByDateUp","isSortByDateDown","setIsSortByDateDown","useParams","id","sorting","prev","fetch","then","res","console","log","responseStatus","status","ok","Error","json","err","first","message","data","sort","a","b","sortByDateUp","sortByDateDown","Stack","spacing","direction","Button","onClick","Container","maxWidth","map","i","__v","MessagePage","setMessage","url","Users","users","setUsers","useRouteMatch","path","searchUrl","user","UserPage","setUser","getAllMessages","App","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f56c162.chunk.js","sourcesContent":["import { React, useState } from 'react';\nimport './style.css'\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom'\nimport { useEffect } from 'react';\n\n\n\nconst Message = (props) => {\n  const [formDate, setFormDate] = useState(props.date);\n  useEffect(() => {\n    const formatedDate = new Date(props.date).toLocaleDateString()\n    setFormDate(formatedDate)\n\n  }, [])\n\n  return (\n    <div className=\"message\">\n      {\n        props &&\n        <Card>\n          <Link to={`/users/${props.userId._id}`}>\n            <CardHeader\n              title={props.userId.name}\n              subheader={formDate}\n            />\n          </Link>\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {props.text}\n            </Typography>\n          </CardContent>\n        </Card>\n      }\n    </div>\n  )\n}\n\nexport default Message;","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useParams, Link, useRouteMatch } from 'react-router-dom'\n\n\n\nconst User = (props) => {\n  return (\n    <div className=\"user\">\n      {\n        props &&\n        <Card>\n          <CardHeader\n            title={props.name}\n\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {props.email}\n            </Typography>\n          </CardContent>\n        </Card>\n      }\n    </div>\n  )\n}\n\nexport default User;","import React from 'react';\nimport './style.css'\nimport Container from '@mui/material/Container';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport User from '../User';\n\nconst Sidebar = () => {\n  const data = {\n    name: \"Robert\",\n    email: \"email@email.email\"\n  }\n  return (\n    <div className='sidebar'>\n      <User {...data} />\n    </div>\n  )\n\n}\nexport default Sidebar","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Message from '../../Component/Message'\nimport Sidebar from '../../Component/Sidebar'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom'\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport './style.css'\n\n\nconst MainPage = () => {\n  const [messages, setMessages] = useState()\n  const [letSort, setLetSort] = useState(false)\n  const [isSortByDateUp, setIsSortByDateUp] = useState(false);\n  const [isSortByDateDown, setIsSortByDateDown] = useState(false);\n  const [isSortByUser, setIsSortByUser] = useState(false);\n  const { id } = useParams();\n\n  function sorting() {\n    setLetSort(prev => prev = !prev)\n  }\n\n\n  function sortByDateUp(data) {\n    const sortedMessages = data.sort((a, b) => {\n      if (a.date > b.date) {\n        return 1\n      }\n      if (a.date < b.date) {\n        return -1\n      }\n      return 0\n    })\n    return sortedMessages\n  }\n  function sortByDateDown(data) {\n    const sortedMessages = data.sort((a, b) => {\n      if (a.date > b.date) {\n        return -1\n      }\n      if (a.date < b.date) {\n        return 1\n      }\n      return 0\n    })\n    return sortedMessages\n  }\n\n  // function sortByUser(data) {\n  //   const sortedMessages = data.filter(message => message.userId.name === \"Gilly Diviny\")\n  //   return sortedMessages\n\n  // }\n\n  useEffect(() => {\n    getAllMessages()\n  }, [letSort])\n  // Function to fet all messages from api\n\n\n  function getAllMessages() {\n    const url = \"https://minitwitterbackend.herokuapp.com/messages\"\n    fetch(url)\n      .then(\n        (res) => {\n          console.log({ responseStatus: res.status });\n          if (!res.ok)\n            throw new Error(`An error has occured. HTTP code: ${res.status}`);\n          return res.json();\n        },\n        (err) => console.log({ first: err.message })\n      )\n      .then(data => {\n        if (isSortByDateUp) {\n          setMessages(() => sortByDateUp(data))\n\n        } else if (isSortByDateDown) {\n          setMessages(() => sortByDateDown(data))\n        }\n        setMessages(data)\n      })\n  }\n\n  return (\n    <div className=\"main\">\n      <Sidebar />\n      <Stack className=\"filter\" spacing={2} direction=\"column\">\n        <Button onClick={() => {\n          setIsSortByDateUp(true)\n          setIsSortByDateDown(false)\n          // sortByUser(false)\n\n          sorting()\n        }} variant=\"contained\">Sort by date up</Button>\n        <Button onClick={() => {\n          setIsSortByDateDown(true)\n          setIsSortByDateUp(false)\n          // sortByUser(false)\n\n          sorting()\n        }} variant=\"contained\">Sort by date down</Button>\n        {/* <Button onClick={() => {\n          // sortByUser(true)\n          setIsSortByDateUp(false)\n          setIsSortByDateDown(false)\n          sorting()\n        }} variant=\"contained\">Sort by user</Button> */}\n      </Stack>\n      <Container maxWidth=\"sm\">\n        {\n          messages && messages.map((message, i) => {\n            if (message.__v !== 0) {\n              return (\n                <Message\n                  key={message._id}\n                  {...message}\n                />\n              )\n            }\n          })\n        }\n      </Container>\n    </div>\n\n  )\n};\n\nexport default MainPage;\n\n\n","import React from 'react';\nimport './style.css'\nimport Container from '@mui/material/Container';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Message from '../../Component/Message'\nimport { useParams } from 'react-router-dom'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\n\nconst MessagePage = () => {\n  const { id } = useParams();\n  const [message, setMessage] = useState()\n  useEffect(() => {\n    const url = `https://minitwitterbackend.herokuapp.com/messages/${id}`\n    console.log(url)\n    fetch(url)\n      .then(\n        (res) => {\n          console.log({ responseStatus: res.status });\n          if (!res.ok)\n            throw new Error(`An error has occured. HTTP code: ${res.status}`);\n          return res.json();\n        },\n        (err) => console.log({ first: err.message })\n      )\n      .then(data => setMessage(data))\n  }, [id])\n  return (\n    <Container maxWidth=\"sm\">\n      {\n        message &&\n        <Message\n          {...message}\n        />\n      }\n\n    </Container>\n  )\n}\n\nexport default MessagePage;","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport User from '../../Component/User'\nimport { useParams, Link, useRouteMatch } from 'react-router-dom'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Users = () => {\n  const [users, setUsers] = useState()\n  const { id } = useParams();\n  const { url, path } = useRouteMatch()\n  // useEffect(() => {\n  //   const url = `https://minitwitterbackend.herokuapp.com/users/`\n  //   console.log(url)\n  //   fetch(url)\n  //     .then(\n  //       (res) => {\n  //         console.log({ responseStatus: res.status });\n  //         if (!res.ok)\n  //           throw new Error(`An error has occured. HTTP code: ${res.status}`);\n  //         return res.json();\n  //       },\n  //       (err) => console.log({ first: err.message })\n  //     )\n  //     .then(data => setUsers(data))\n  // }, [])\n  useEffect(() => {\n    if (id) {\n      const searchUrl = `https://minitwitterbackend.herokuapp.com/users/${id}`\n      console.log(searchUrl)\n      fetch(searchUrl)\n        .then(\n          (res) => {\n            console.log({ responseStatus: res.status });\n            if (!res.ok)\n              throw new Error(`An error has occured. HTTP code: ${res.status}`);\n            return res.json();\n          },\n          (err) => console.log({ first: err.message })\n        )\n        .then(data => setUsers(data))\n\n    } else {\n      const searchUrl = `https://minitwitterbackend.herokuapp.com/users/`\n      console.log(searchUrl)\n      fetch(searchUrl)\n        .then(\n          (res) => {\n            console.log({ responseStatus: res.status });\n            if (!res.ok)\n              throw new Error(`An error has occured. HTTP code: ${res.status}`);\n            return res.json();\n          },\n          (err) => console.log({ first: err.message })\n        )\n        .then(data => setUsers(data))\n    }\n  }, [id])\n  return (\n    <Container maxWidth=\"sm\">\n      {users && users.map(user => {\n        if (user.name !== 'test') {\n          return (\n            <Link\n              key={user._id}\n\n              to={`/users/${user._id}`}>\n              <User\n                name={user.name}\n                email={user.email}\n              />\n\n            </Link>\n          )\n\n        }\n      })\n      }\n    </Container>\n  )\n}\n\nexport default Users;","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\n\nimport User from '../../Component/User'\nimport Message from '../../Component/Message'\nimport './style.css'\nimport { useParams, Link, useRouteMatch } from 'react-router-dom'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst UserPage = () => {\n  const [user, setUser] = useState()\n  const [messages, setMessages] = useState()\n\n  const { id } = useParams();\n  const { url, path } = useRouteMatch()\n  console.log(path)\n  useEffect(() => {\n    const searchUrl = `https://minitwitterbackend.herokuapp.com/users/${id}`\n    fetch(searchUrl)\n      .then(\n        (res) => {\n          console.log({ responseStatus: res.status });\n          if (!res.ok)\n            throw new Error(`An error has occured. HTTP code: ${res.status}`);\n          return res.json();\n        },\n        (err) => console.log({ first: err.message })\n      )\n      .then(data => setUser(data))\n\n    getAllMessages()\n  }, [id])\n  function getAllMessages() {\n    const url = `https://minitwitterbackend.herokuapp.com/users/${id}/messages`\n    fetch(url)\n      .then(\n        (res) => {\n          console.log({ responseStatus: res.status });\n          if (!res.ok)\n            throw new Error(`An error has occured. HTTP code: ${res.status}`);\n          return res.json();\n        },\n        (err) => console.log({ first: err.message })\n      )\n      .then(data => setMessages(data))\n  }\n  return (\n    <Container maxWidth=\"sm\">\n      <User\n        {...user}\n      />\n      <Link to={`/users/`}>\n        Back to Users\n      </Link> <br />\n      <Link to={`/`}>\n        Back to Messages\n      </Link>\n      <Stack className=\"user-messages\">\n        {\n          messages && messages.map((message, i) => {\n            return (\n              <Message\n                key={message._id}\n                {...message}\n              />\n            )\n          })\n        }\n\n      </Stack>\n    </Container>\n  )\n}\n\nexport default UserPage;","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MainPage from './Pages/Home'\nimport MessagePage from './Pages/Message-page'\nimport Users from './Pages/Users'\nimport UserPage from './Pages/UserPage'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <CssBaseline />\n      <Route>\n        {/* <Navigation path=\"/navigation\" /> */}\n\n      </Route>\n      <Route exact path=\"/\">\n        <MainPage />\n\n      </Route>\n      <Route path=\"/messages=:id\">\n        <MessagePage />\n\n      </Route>\n      <Route path=\"/users/:id\">\n        <UserPage />\n      </Route>\n      <Route exact path=\"/users/\">\n        <Users />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}